@using Microsoft.AspNetCore.Antiforgery
@inject IAntiforgery antiforgery
@{
    this.ViewData["Title"] = "Add new game";
    var tokenSet = antiforgery.GetAndStoreTokens(Context);
}

@model SportBattles.Web.ViewModels.Administration.Game.AddGameInputModel

<form method="post" class="col-md-12 g-4">
    <label for="inputGameType" class="text-uppercase">Choose game type:</label>
    <div class="d-flex">
        <select asp-for="Game.TypeID" id="inputGameType" class="form-control user-select-none"></select>
        <a title="Scoring points" class="btn btn-success rounded-circle form-control w-auto" id="scoringPoints">
            <i class="fa fa-question-circle"></i>
        </a>
    </div>
    <div class="input-game-name">
        <label for="name">Input game name:</label>
        <input asp-for="Game.Name" class="form-control" id="name">
        <span asp-validation-for="Game.Name" class="text-danger"></span>
        <div asp-validation-summary="ModelOnly" class="text-danger"></div>
        <button type="submit" class="btn btn-outline-primary col-md-12">Add</button>
    </div>
</form>

<form method="post" class="g-4 col-md-12" style="display:none" id="manualInputGameType">
    <div class="shadow-lg p-4 mb-4 bg-light rounded-lg">
        <div class="form-row">
            <input asp-for="GameType.Name" class="form-control" id="gameTypeName" placeholder="Input game type">
            <div class="alert text-danger" style="display:none">This type name already exists!</div>
            <span asp-validation-for="GameType.Name" class="text-danger"></span>
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
        </div>
        <div class="form-row">
            <textarea asp-for="GameType.Description" rows="4" class="form-control" id="gameTypeDescription" placeholder="Please add description of this game type"></textarea>
            <span asp-validation-for="GameType.Description" class="text-danger"></span>
        </div>
    </div>
    <div class="form-row form-check-inline text-uppercase">Scoring points</div>
    <div class="shadow-lg p-4 mb-4 bg-light rounded-lg" id="inputPoint"></div>
    <span class="text-danger" style="display:none" id="points_select">You must select minimum one scoring point.</span>
    <div class="shadow-lg p-4 mb-4 bg-light rounded-lg" style="display:none" id="addNewGamePoint">
        <div id="manualInputPoint">
            <input asp-for="GameType.Name" class="form-control" placeholder="Type name of point..." id="pointName">
            <span asp-validation-for="GameType.Name" class="text-danger"></span>
            <textarea asp-for="GameType.Description" rows="4" class="form-control" id="pointDescription" placeholder="Please add description of this point"></textarea>
            <span asp-validation-for="GameType.Description" class="text-danger"></span>
            <div class="alert text-danger" style="display:none">This score point name already exists!</div>
            <div class="d-flex justify-content-center">
                <button type="button" class="btn btn-outline-success form-control" id="buttonAddNewPoint">Add</button>
                <button type="button" class="btn btn-outline-danger form-control" id="buttonAddNewPointCancel">Cancel</button>
            </div>
        </div>
    </div>
    <button class="btn btn-outline-primary col-md-12" id="buttonAddGameType">Add</button>
</form>

@section Scripts {
    <script>
$(document).ready(function() {
    getAllGameTypes();
    getAllScoringPoints();
});
        var scoringPoints = [];
var getAllGameTypes = function() {
    $.ajax({
        url: '@Url.Action("GetAllGameTypes", "Game", new { Area = "Administration" })',
        type: 'GET',
        success: function(data) {
            $('#inputGameType').find('option').remove()
            $(data).each(
                function(index, item) {
                    $('#inputGameType').append('<option value="' + item.id + '">' + item.name + '</option>');
                    scoringPoints[item.id] = item.gamePoints;
                });
            console.log(scoringPoints);
            $('#inputGameType').append('<option>Add new game type...</option>');
            showHideAddNewGameType();
        },
        error: function() {
            console.log("Error getting GameTypes");
        }
    });
        }

var getAllScoringPoints = function () {
 $.ajax({
    url: '@Url.Action("GetAllGamePoints", "Game", new { Area = "Administration" })',
    type: 'GET',
     success: function (data) {
        $('#inputPoint').empty();
        $(data).each(
            function (index, item) {
                $('#inputPoint').append('<div class="d-flex justify-content-center" data-toggle="tooltip" title="' + item.description + '"><div class="form-check-inline"><input type="checkbox" class="" id="' + item.id + '" /></div><label class="form-control" for="' + item.id + '">' + item.name + '</label><input type="number" class="form-control w-25" id="' + item.id + '"></div><span style="display:none" asp-validation-for="' + item.id + '" class="text-danger text-right">Points must be between 0 and 10</span>');
            });
         $('#inputPoint').append('<div class="d-flex justify-content-center" data-toggle="tooltip" title="Add new Scoring point"><a class="btn btn-outline-success form-control" id="buttonAddPoint">Add new scoring point</a></div>');
         $("#buttonAddPoint").click(function () {
             $("#pointName").val("");
             $("#pointDescription").val("");
             $("#addNewGamePoint").show();
             $("#manualInputGameType").find(".shadow-lg").not(":last").hide();
             $("#buttonAddGameType").hide();
             $("#pointName").focus();
         });
    },
     error: function () {
         console.log("Error getting Points");
    }
   });
        }



var showHideAddNewGameType = function() {
    $("#name").val('');
    $(".alert").hide();
    $("#addNewGamePoint").hide();
    $("#manualInputGameType").find(".shadow-lg").not(":last").show();
    var selectOption = $("#inputGameType").find(":selected").text();
    if (selectOption == 'Add new game type...') {
        $(".input-game-name").hide();
        $('#scoringPoints').hide();
        $("#manualInputGameType").show();
        $("#gameTypeName").focus();
        
        $("#buttonAddNewPoint").click(function () {
            if ($("#pointName").valid() && $("#pointDescription").valid()) {
                $.ajax({
                    type: 'POST',
                    url: '@Url.Action("AddGamePoint", "Game", new { Area = "Administration" })',
                    dataType: 'json',
                    contentType: 'application/json',
                    headers: {
                        '@tokenSet.HeaderName': '@tokenSet.RequestToken'
                    },
                    data: JSON.stringify({
                        Name: $("#pointName").val(),
                        Description: $("#pointDescription").val()
                    }),
                    success: function (data) {
                        $("#pointName").val('');
                        $("#pointDescription").val('');
                        getAllScoringPoints();
                        $("#buttonAddNewPointCancel").click();
                    },
                    error: function () {
                        $(".alert").show();
                        $("#manualInputGameType").find(".shadow-lg:last").mousedown(function () {
                            $(".alert").hide();
                        });
                    }
                });
            }
        });
        $("#buttonAddNewPointCancel").click(function () {
            $("#addNewGamePoint").hide();
            $("#manualInputGameType").find(".shadow-lg").not(":last").show();
            $("#buttonAddGameType").show();
        });
    } else {
        $("#manualInputGameType").hide();
        $(".input-game-name").show();
        $('#scoringPoints').show();
        var selectGameTypeId = $("#inputGameType").find(":selected").val();
        $('#scoringPoints').popover({ html: true, placement: "left", trigger: "hover" });
        var popoverData = new String();
        $(scoringPoints[selectGameTypeId]).each(function (index, score) {
            popoverData += '<div class"row">' + score.name + ': ' + score.value + '</div>';
        });
        $('#scoringPoints').data("bs.popover").element.dataset.content = popoverData;
        $('#scoringPoints').data("bs.popover").setContent();
        $("#gameTypeName").val('');
        $("#gameTypeDescription").val('');
    }
}

        $("#inputGameType").change(showHideAddNewGameType);
        var selectedScoringPoints = [];
$("#buttonAddGameType").click(function () {
    var gameTypeName = $('#gameTypeName').val();
    var duplicateGameType = jQuery.inArray(gameTypeName, $("#inputGameType option").toArray().map(o => o.textContent)) != -1;
    if ($("#manualInputGameType").valid()) {
        if (duplicateGameType) {
            $(".alert").show();
            $("#gameTypeName").mousedown(function () {
                $(".alert").hide();
            });
            return false;
        } else if ($('#inputPoint').find(":checked").length > 0) {
            selectedScoringPoints = [];
            $('#inputPoint').find(":checked").each(function (index, e) {
                var input = $(e).parent("div").parent("div").find("input")[1];
                if ($.isNumeric(input.value) && input.value >= 0 && input.value <= 10) {
                    selectedScoringPoints.push({ id: input.id, value: input.value });
                }
                else {
                    $(input).css("border-color", "red");
                    $(e).parent("div").parent("div").next("span").show();
                    $('#inputPoint').click(function () {
                        $(e).parent("div").parent("div").next("span").hide();
                        $(input).css("border-color", "#ced4da");
                    });
                }
            });
            if ($('#inputPoint').find(":checked").length != selectedScoringPoints.length) {
                return false;
            }
                } else {
            $("#points_select").show();
            $('#inputPoint').click(function () {
                $("#points_select").hide();
            });
            return false;
        }
    } else {
        return false;
    }
});

    $("#manualInputGameType").on("submit", function (event) {
    event.preventDefault();
    var gameTypeName = $('#gameTypeName').val();
    var gameTypeDescription = $("#gameTypeDescription").val();
    $.ajax({
            type: 'POST',
            url: '@Url.Action("AddGameType", "Game", new { Area = "Administration" })',
            dataType: 'json',
            contentType: 'application/json',
            headers: {
                '@tokenSet.HeaderName': '@tokenSet.RequestToken'
            },
            data: JSON.stringify({
                Name: gameTypeName,
                Description: gameTypeDescription,
                SelectedScoringPoints: selectedScoringPoints,
            }),
            success: function(data) {
                $("#gameTypeName").val('');
                $("#gameTypeDescription").val('');
                getAllGameTypes();
            },
            error: function(data) {
                alert("Error adding game type!");
            }
        });
});
    </script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery-validate/1.19.1/jquery.validate.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery-validation-unobtrusive/3.2.11/jquery.validate.unobtrusive.min.js"></script>
}