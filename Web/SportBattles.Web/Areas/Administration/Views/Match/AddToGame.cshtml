@using Microsoft.AspNetCore.Antiforgery
@inject IAntiforgery antiforgery
@{
    this.ViewData["Title"] = "Add matches to game";
    this.ViewData["Admin"] = "active";
    var tokenSet = antiforgery.GetAndStoreTokens(Context);
}

<label for="inputSport" class="mt-4">Choose Sport:</label>
<div class="form-row">
    <div class="input-group col-md-6">
        <select id="inputSport" class="form-control user-select-none">
        </select>
    </div>
    <div class="input-group form-group col-md-6" style="display:none" id="manualInputSport">
        <input type="text" class="form-control" placeholder="Type name of sport..." id="sportName">
        <div class="input-group-append">
            <button class="btn btn-outline-secondary" id="buttonAddSport">Add</button>
        </div>
    </div>
</div>

<label for="inputCountry" class="mt-4">Choose Country:</label>
<div class="form-row">
    <div class="input-group col-md-6">
        <select id="inputCountry" class="form-control">
        </select>
    </div>
    <div class="input-group form-group col-md-6" style="display:none" id="manualInputCountry">
        <select class="form-control" id="countryName">
            <option>Select Country...</option>
        </select>
        <div class="input-group-append">
            <button class="btn btn-outline-secondary" id="buttonAddCountry">Add</button>
        </div>
    </div>
</div>

<label for="inputTournament" class="mt-4">Choose Tournament:</label>
<div class="form-row">
    <div class="input-group col-md-6">
        <select id="inputTournament" class="form-control">
        </select>
    </div>
    <div class="input-group form-group col-md-6" style="display:none" id="manualInputTournament">
        <input type="text" class="form-control" placeholder="Type name of tournament..." id="tournamentName">
        <div class="input-group-append">
            <button class="btn btn-outline-secondary" id="buttonAddTournament">Add</button>
        </div>
    </div>
</div>

<button class="btn btn-outline-primary mt-4" id="buttonShowMatches">Show</button>
<table class="table mt-4" id="tableMatches" style="display:none">
    <thead>
        <tr>
            <th>Select</th>
            <th>Start time</th>
            <th>Home team</th>
            <th>Away team</th>
        </tr>
    </thead>
    <tbody id="body">
    </tbody>
</table>

<div class="row justify-content-around mt-4 ">
    <button class="btn btn-outline-primary col-md-5" id="buttonAddMatchesToGame" disabled>Add selected matches to game</button>
</div>

<script src="~/lib/jquery/dist/jquery.min.js" asp-append-version="true"></script>
<script>
    $(document).ready(function () {
        getAllSports();
    });

    var getAllSports = function () {
         $.ajax({
            url: '@Url.Action("GetAll", "Sport", new { Area = "Administration" })',
            type: 'GET',
            success: function (data) {
                $('#inputSport').find('option').remove()
                $(data).each(
                    function (index, item) {
                        $('#inputSport').append('<option value="' + item.id + '">' + item.name + '</option>')
                    });
                $('#inputSport').append('<option>Add new sport...</option>');
                showHideAddNewSport();
            },
             error: function () {
                 console.log("Error getting Sports");
            }
           });
    }

    var showHideAddNewSport = function () {
        var selectOption = $("#inputSport").find(":selected").text();
        if (selectOption == 'Add new sport...') {
            $("#manualInputSport").show();
            $("#sportName").focus();
            $("#inputCountry").prop("disabled", true);
            $('#inputCountry').find('option').remove();
            $('#inputCountry').append('<option>Choose sport first</option>');
            $("#inputTournament").prop("disabled", true);
            $('#inputTournament').find('option').remove();
            $('#inputTournament').append('<option>Choose country first</option>');
            $("#manualInputCountry").hide();
            $("#manualInputTournament").hide();
        } else {
            $("#manualInputSport").hide();
            $("#sportName").val('');
            $("#inputCountry").prop("disabled", false);
            GetCountriesForSelectedSport();
            GetAllOtherCountriesForSelectedSport();
        }
        $('#inputCountry option').attr('selected', 'selected');
    }

    var showHideAddCountryToSport = function () {
        var selectOption = $("#inputCountry").find(":selected").text();
        if (selectOption == 'Add new country to sport...') {
            GetAllOtherCountriesForSelectedSport();
            $("#manualInputCountry").show();
            $("#countryName").focus();
            $("#inputTournament").prop("disabled", true);
            $('#inputTournament').find('option').remove();
            $('#inputTournament').append('<option>Choose country first</option>');
            $("#manualInputTournament").hide();
        } else {
            $("#manualInputCountry").hide();
            $("#inputTournament").prop("disabled", false);
            GetTournamentsForSelectedSportInCountry();
        }
    }

    var showHideAddTournamentToCountryAndSport = function () {
        var selectOption = $("#inputTournament").find(":selected").text();
        if (selectOption == 'Add new tournament to sport in country...') {
            $("#manualInputTournament").show();
            $("#tournamentName").focus();
        } else {
            $("#manualInputTournament").hide();
            $("#tournamentName").val('');
            $("#inputTournament").prop("disabled", false);
        }
    }

    $("#inputSport").change(showHideAddNewSport);
    $("#inputCountry").change(showHideAddCountryToSport);
    $('#inputTournament').change(showHideAddTournamentToCountryAndSport);



    var GetCountriesForSelectedSport = function (selectedId) {
        var sportId = $("#inputSport").val();
        $.ajax({
            url: '@Url.Action("GetAllForSelectedSport", "Country", new { Area = "Administration" })',
            type: 'GET',
            data: { sportId: sportId },
            success: function (data) {
                $('#inputCountry').find('option').remove()
                $(data).each(
                    function (index, item) {
                        $('#inputCountry').append('<option value="' + item.id + '">' + item.name + '</option>')
                    });
                $('#inputCountry').append('<option>Add new country to sport...</option>');
                $('#inputCountry option[value=' + selectedId + ']').attr('selected', 'selected');
                showHideAddCountryToSport();
            },
             error: function () {
                 console.log("Error getting Countries");
            }
           });
    }

    var GetTournamentsForSelectedSportInCountry = function (selectedId) {
        var sportId = $("#inputSport").val();
        var countryId = $("#inputCountry").val();
        $.ajax({
            url: '@Url.Action("GetAllForSelectedSportInCountry", "Tournament", new { Area = "Administration" })',
            type: 'GET',
            data: { sportId: sportId, countryId: countryId },
            success: function (data) {
                $('#inputTournament').find('option').remove()
                $('#inputTournament').append('<option>All</option>');
                $(data).each(
                    function (index, item) {
                        $('#inputTournament').append('<option value="' + item.id + '">' + item.name + '</option>')
                    });
                $('#inputTournament').append('<option>Add new tournament to sport in country...</option>');
                $('#inputTournament option[value=' + selectedId + ']').attr('selected', 'selected');
                showHideAddTournamentToCountryAndSport();
            },
             error: function () {
                 console.log("Error getting Tournaments");
            }
           });
    }

    $("#buttonShowMatches").click(function () {
        $("#tableMatches #body").find('tr').remove();
        $("#tableMatches").show();
        var sport = $("#inputSport").find(":selected").text();
        var tournament = $("#inputTournament").find(":selected").text();
        var country = $("#inputCountry").find(":selected").text();
        $.ajax({
            url: '@Url.Action("Show", "Match", new { Area = "Administration" })',
            type: 'GET',
            data: { sport: sport, country: country, tournament: tournament },
            success: function (data) {
                console.log(data);
                if (data.length == 0) {
                    $("<tr><td colspan=5>No matches for selected category</td></tr>").appendTo($("#tableMatches #body"));
                }
                else {
                    var count = 0;
                    $(data).each(
                        function (index, match) {
                            var dateTimeUTCNow = new Date('@DateTime.UtcNow.ToString("s")');
                            var matchStartTimeUTC = new Date(match.startTimeUTC);
                            if (matchStartTimeUTC - dateTimeUTCNow > 0) {
                                $(`<tr><td><input type="checkbox" id=${match.id}></td><td>${match.startTimeLocalTime}</td><td>${match.homeTeam}</td><td>${match.awayTeam}</td><td></td></tr>`).appendTo($("#tableMatches #body"));
                                count++;
                            }
                        });
                    if (count == 0) {
                        $("<tr><td colspan=5>No matches for selected category</td></tr>").appendTo($("#tableMatches #body"));
                        return;
                    }
                    $('#tableMatches tr').click(function (event) {
                        if (event.target.type !== 'checkbox') {
                            $(':checkbox', this).trigger('click');
                        }

                        if ($(this).find('input').is(':checked')) {
                            $(this).css('background-color', 'lightblue');
                            $("#buttonAddMatchesToGame").prop("disabled", false);
                        } else {
                            $(this).css('background-color', 'white');
                            if ($('#tableMatches :checked').length == 0) {
                                $("#buttonAddMatchesToGame").prop("disabled", true);
                            }
                        }
                    });
                    $("#buttonAddMatchesToGame").click(function () {
                        var sport = $("#inputSport").find(":selected").text();
                        var checkedIds = $('#tableMatches :checked').toArray().map(i => i.id);
                        var checkedMatches = data.filter(function (item) {
                                            return (jQuery.inArray(item.id, checkedIds) !== -1)
                        });
                        var sendData;
                        if (sport == "Football") {
                            sendData = {
                            Matches: checkedMatches,
                            GameId: @Model,
                            Sport: sport
                            };
                        } else if (sport == "Tennis") {
                            sendData = {
                            TennisMatches: checkedMatches,
                            GameId: @Model,
                            Sport: sport
                            };
                        }

                        $.ajax({
                            type: 'POST',
                            url: '@Url.Action("AddSelectedMatches", "Game", new { Area = "Administration" })',
                            dataType: 'json',
                            contentType: 'application/json',
                            headers: {
                                '@tokenSet.HeaderName': '@tokenSet.RequestToken'
                            },
                            data: JSON.stringify(sendData),
                            success: function (response) {
                                window.location.href = response.redirectToUrl;
                            }
                        });
                    });
                }
            },
             error: function () {
                 console.log("Error getting Matches");
            }
        });
    });



    var GetAllOtherCountriesForSelectedSport = function () {
        var sportId = $("#inputSport").val();
        $.ajax({
            url: '@Url.Action("GetAllOthersForSelectedSport", "Country", new { Area = "Administration" })',
            type: 'GET',
            data: { sportId: sportId },
            sucToShortTimeStringess: function (data) {
                $('#countryName').find('option').remove()
                $(data).each(
                    function (index, item) {
                        $('#countryName').append('<option value="' + item.id + '">' + item.name + '</option>')
                    });
            },
             error: function () {
                 console.log("Error getting Countries");
            }
           });
    }

    $("#buttonAddCountry").click(function () {
        $.ajax({
            type: 'POST',
            url: '@Url.Action("AddToSport", "Country", new { Area = "Administration" })',
            dataType: 'json',
            contentType: 'application/json',
            headers: {
                '@tokenSet.HeaderName': '@tokenSet.RequestToken'
            },
            data: JSON.stringify({
                CountryId: $('#countryName').val(),
                SportId: $("#inputSport").val(),
            }),
            success: function (countryId) {
                $("#manualInputCountry").hide();
                GetCountriesForSelectedSport(countryId);
            }
        });
    });
</script>

<script>
    $("#buttonAddSport").click(function () {
    var sportName = $('#sportName').val();
        $.ajax({
            type: 'POST',
            url: '@Url.Action("Add", "Sport", new { Area = "Administration" })',
            dataType: 'json',
            contentType: 'application/json',
            headers: {
                '@tokenSet.HeaderName': '@tokenSet.RequestToken'
            },
            data: JSON.stringify({
                Name: sportName
            }),
            success: function (data) {
                $("#sportName").val('');
                alert(data.name + " added successfully!");
                getAllSports();
            },
            error: function () {
                alert("Sport name must be between 2 and 20 symbols");
            }
        });
    });
</script>