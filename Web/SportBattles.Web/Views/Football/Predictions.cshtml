@using Microsoft.AspNetCore.Antiforgery
@inject IAntiforgery antiforgery

@{
    this.ViewData["Title"] = "Matches in this game";
    this.ViewData["MyGames"] = "active";
    var tokenSet = antiforgery.GetAndStoreTokens(Context);
}

@section Heads{
    <link rel="stylesheet" href="~/css/matches.css" type="text/css" asp-append-version="true" />
}
@model SportBattles.Web.ViewModels.Football.PredictionsViewModel
<div id="all-matches">
    @foreach (var match in Model.Matches)
    {
        <div class="match">
            <input type="hidden" class="matchId" value="@match.Id" />
            <div class="league">
                @if (Model.MatchesDoublePoints[match.Id])
                {
                    <div class="double_points" data-toggle="tooltip" title="Double point match">x2</div>
                }
                @match.TournamentCountryName - @match.TournamentName
                <div class="points" data-toggle="tooltip" data-html="true" title="@("Scoring system<br />" + @String.Join("<br />", Model.GamePoints.Select(gp => gp.NameValue)))">
                    @if (Model.MatchesPredictions.ContainsKey(match.Id) && Model.MatchesPredictions[match.Id].Points != null)
                    {
                        <span>@Model.MatchesPredictions[match.Id].Points</span>
                    }
                    else
                    {
                        <span>?</span>
                    }
                </div>
            </div>
            <div class="startDate">@match.StartTimeLocalTime</div>
            <div class="teams_result">
                <div class="home_team">@match.HomeTeamName</div>
                <div class="emblem"><img src="@(match.HomeTeamEmblemUrl?? "/img/noTeamEmblem.png")" alt=""></div>
                @if (match.StartTime > DateTime.UtcNow)
                {
                    <div class="result">
                        <input type="number" class="home_team_goals" maxlength='1' value='@(Model.MatchesPredictions.ContainsKey(match.Id) ? Model.MatchesPredictions[match.Id].HomeGoals : "")' />
                        <div class="separator">-</div>
                        <input type="number" class="away_team_goals" maxlength='1' value='@(Model.MatchesPredictions.ContainsKey(match.Id) ? Model.MatchesPredictions[match.Id].AwayGoals : "")' />
                    </div>
                }
                else
                {
                    <div class="finished_result">
                        <div class="prediction" data-toggle="tooltip" title="Your prediction">
                            @(Model.MatchesPredictions.ContainsKey(match.Id) ? Model.MatchesPredictions[match.Id].HomeGoals : "?")
                            -
                            @(Model.MatchesPredictions.ContainsKey(match.Id) ? Model.MatchesPredictions[match.Id].AwayGoals : "?")
                        </div>
                        <div class="real_result" data-toggle="tooltip" title="Result">
                            @if (match.Status == "Canc." || match.Status == "Postp.")
                            {
                                @match.Status
                            }
                            else
                            {
                                @(match.HomeGoals?.ToString() ?? "?")
                                <span>-</span>
                                @(match.AwayGoals?.ToString() ?? "?")
                            }
                        </div>
                    </div>
                }
                <div class="emblem"><img src="@(match.AwayTeamEmblemUrl?? "/img/noTeamEmblem.png")" alt=""></div>
                <div class="away_team">@match.AwayTeamName</div>
            </div>
            <div class="error"></div>
        </div>
    }
    <div id="loadMore" class="btn-lg btn-danger btn-block">Load more</div>
</div>
    @section Scripts{
        <script>
        $(document).ready(function () {
            //Disable whole page
            $(this).bind('cut copy paste', function (e) {
                e.preventDefault();
            });
            $("input").each(function() {
                if (this.value.length == 1) {
                    $(this).css("color", "green");
                }
            });
            $(function () {
                $('[data-toggle="tooltip"]').tooltip();
            });
            $(function () {
                var items = $('#all-matches div.match').length;
                var shown = 6;
                $('#all-matches div.match:lt(6)').show();
                $('#loadMore').click(function () {
                    shown = $('#all-matches div.match:visible').length + 6;
                    if (shown < items) { $('#all-matches div.match:lt(' + shown + ')').show(); }
                    else {
                        $('#all-matches div.match:lt(' + items + ')').show();
                        $('#loadMore').hide();
                    }
                });
            });
        });

        var previousValue = null;
        $(".match").click(function (e) {
            if (e.target.className != "away_team_goals") {
                e.currentTarget.querySelector(".home_team_goals").select();
            }
        });

        $("input").click(function () {
            $(this).select();
        });

        $("input").keydown(function (e) {
            previousValue = this.value;
            var numbers = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9];
            if (numbers.some(n => n == e.key) && e.keyCode != 32) {
                if (this.value.length == this.maxLength) {
                    this.value = "";
                }
            }
            else {
                return false;
            }
        });

        $("input").keyup(function (e) {
            var parentResultElement = e.currentTarget.parentNode;
            if (this.value.length == 0 || this.value == previousValue) {
                this.select();
                return false;
            }
            if (this.value.length == this.maxLength && Array.from(this.parentNode.querySelectorAll("input")).some(e => e.value == "")) {
                if (e.target.className == "away_team_goals") {
                    e.currentTarget.parentNode.querySelector(".home_team_goals").focus();
                }
                else {
                    e.currentTarget.parentNode.querySelector(".away_team_goals").focus();
                }
            }
            else {
                $(parentResultElement).find("input").css("color", "green");
                var home_goals = $(parentResultElement).find(".home_team_goals").val();
                var away_goals = $(parentResultElement).find(".away_team_goals").val();
                var match_id = $(parentResultElement).closest(".match").find(".matchId").val();
                $.ajax({
                            type: 'POST',
                            url: '@Url.Action("SavePredictions", "Football")',
                            dataType: 'json',
                            contentType: 'application/json',
                            headers: {
                                '@tokenSet.HeaderName': '@tokenSet.RequestToken'
                            },
                            data: JSON.stringify({
                                HomeGoals: home_goals,
                                AwayGoals: away_goals,
                                MatchId: match_id,
                                GameId: @Model.GameId,
                            }),
                    success: function (data) {
                        var matchElement = $(parentResultElement).closest(".match");
                        var currentColor = matchElement.css("background");
                        if (data.isValid) {
                            matchElement.css("background", "green");
                            setTimeout(function () {
                                matchElement.css("background", currentColor);
                            }, 300);
                            matchElement.next(".match").click();
                        }
                        else {
                            matchElement.find("input").css("color", "red");
                            matchElement.css("background", "red");
                            matchElement.find(".error").text(data.error).show();
                            setTimeout(function () {
                                matchElement.css("background", currentColor);
                                matchElement.find(".error").hide();
                            }, 600);
                        }
                    },
                        });
            }
        });

        $("input").change(function () {
            if (this.value.length == 0) {
                $(this.parentNode).find("input").css("color", "red");
            };
        });


        </script>
    }